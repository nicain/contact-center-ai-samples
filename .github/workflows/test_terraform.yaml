name: Terraform Test
on:
  push:
    branches:
      - actions_v2
permissions:
  id-token: write
jobs:
  Get_OIDC_ID_token:
    runs-on: ubuntu-latest
    steps:
    - id: auth
      name: 'Authenticate to GCP'
      uses: google-github-actions/auth@v0.3.0
      with:
          create_credentials_file: true
          workload_identity_provider: projects/nicholascain-starter-project/locations/global/workloadIdentityPools/demo-pool/providers/github-actions-identity-provider
          service_account: github-actions@nicholascain-starter-project.iam.gserviceaccount.com
    - id: 'gcloud'
      name: 'gcloud'
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0.6.0'
    - name: 'Use gcloud CLI'
      run: 'gcloud info'
    - name: Build & Publish
      run: |
        gcloud config set project ${{ secrets.PROJECT_ID }}
    # - id: gcloud
    #   name: gcloud
    #   run: |-
    #     gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
    #     gcloud config set project nicholascain-starter-project
# jobs:
#   terraform:
#     name: 'Terraform'
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         # terraform_version: 0.13.0
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
# env:
#   PROJECT_ID: ${{ secrets.GCP_ACTIONS_PROJECT_ID}}
#   SERVICE: hello-cloud-run
#   REGION: us-central1

# jobs:
#   job_id:
#     # Add "id-token" with the intended permissions.
#     permissions:
#       contents: 'read'
#       id-token: 'write'
#     runs-on: latest-ubuntu
#     steps:
#     - id: 'auth'
#       uses: 'google-github-actions/auth@v0'
#       with:
#         workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
#         service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

#     - name: 'Set up Cloud SDK'
#       uses: 'google-github-actions/setup-gcloud@v0'

#     - name: 'Use gcloud CLI'
#       run: 'gcloud info'
#   # deploy:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #   - name: Checkout
#   #     uses: actions/checkout@v3

#   #   - name: Setup Cloud SDK
#   #     uses: google-github-actions/setup-gcloud@v0
#   #     with:
#   #       project_id: ${{ env.PROJECT_ID }}
#   #       service_account_key: ${{ secrets.GCP_SA_KEY }}
#   #       export_default_credentials: true  # Set to true to authenticate the Cloud Run action

#   #   - name: Authorize Docker push
#   #     run: gcloud auth configure-docker

#   #   - name: Build and Push Container
#   #     run: |-
#   #       docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} example-app/
#   #       docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
#   #   - name: Deploy to Cloud Run
#   #     id: deploy
#   #     uses: google-github-actions/deploy-cloudrun@v0.9.0
#   #     with:
#   #       service: ${{ env.SERVICE }}
#   #       image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
#   #       region: ${{ env.REGION }}

#   #   - name: Show Output
#   #     run: echo ${{ steps.deploy.outputs.url }}
